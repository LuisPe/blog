<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>best-practices on luispe</title><link>https://luispe.github.io/blog/tags/best-practices/</link><description>Recent content in best-practices on luispe</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 11 Jun 2022 17:49:18 -0300</lastBuildDate><atom:link href="https://luispe.github.io/blog/tags/best-practices/index.xml" rel="self" type="application/rss+xml"/><item><title>El tamaño importa</title><link>https://luispe.github.io/blog/posts/lightweight-container-image/</link><pubDate>Sat, 11 Jun 2022 17:49:18 -0300</pubDate><guid>https://luispe.github.io/blog/posts/lightweight-container-image/</guid><description>En la siguiente publicación voy a compartirles algunos consejos y buenas prácticas para desarrollar nuestras imágenes de container, como ejemplo vamos a crear una imagen para una app en Golang, pero los siguientes consejos aplican para cualquier lenguaje, ¡vamos!
Preámbulo Perseguir que nuestras imágenes de container sean lo más reducida posible en cuanto a su peso (megabytes, gigabytes, etc) no es una cuestión de gustos, nos ayuda en muchos aspectos, a continuación les comparto algunos:</description></item><item><title>Hexagonal Architecture</title><link>https://luispe.github.io/blog/posts/hexagonal-architecture/</link><pubDate>Thu, 09 Jun 2022 21:53:34 -0300</pubDate><guid>https://luispe.github.io/blog/posts/hexagonal-architecture/</guid><description>Esta es la primera de una serie donde vamos a revisar diferentes patrones de desarrollo que errores cometí y cuál es en la actualidad y lo que entiendo hasta el momento, la mejor forma de aplicarlo.
Como bien dice el título de la publicación hoy quiero hablar sobre arquitectura hexagonal.
Preámbulo Hace tiempo noto mucho &amp;ldquo;hype&amp;rdquo; en torno a la arquitectura hexagonal y me gustaría ser claro al respecto, no estoy en contra, mas bien todo lo contrario, me parece un excelente patrón.</description></item></channel></rss>